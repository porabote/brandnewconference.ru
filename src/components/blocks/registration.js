import React, {useState, useEffect} from "react";
import {Helmet} from "react-helmet";
import {useDispatch} from "react-redux";
import Api from "@services";
import {
    Form,
    Button,
    Field,
    Input,
    InputDate,
    InputHidden,
    Option,
    Select,
    Checkbox,
    Radio,
    RadioInput,
    SubmitButton
} from "@components/common/form";
import {openModal} from "@components/common/modal";
import RegistrationNotices from "./registration-notices";
import Telegram from './svg/telegram.svg';
import Calendar from './svg/calendar.svg';
import ButtonArrowIcon from './svg/reg-file-button-arrow.svg';

let OnlineMsg = () => {
    return (
        <div>
            <p>–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –æ–Ω–ª–∞–π–Ω</p>
            <p>–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–Ω—Ç–µ—Ä–µ—Å –∫ –Ω–∞—à–µ–π –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏! –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –Ω–∞ –æ–Ω–ª–∞–π–Ω-—Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—é.
                –ù–∞ –ø–æ—á—Ç—É –ø—Ä–∏–¥—ë—Ç –ø–∏—Å—å–º–æ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º. –ï—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ <a
                    href="mailto:support@brandnewconference.ru">support@brandnewconference.ru</a></p>
            <p>–ü–æ–∫–∞ –µ—Å—Ç—å –≤—Ä–µ–º—è –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã —Å–ø–∏–∫–µ—Ä–∞–º –∏ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –Ω–∞ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—é –∫–æ–ª–ª–µ–≥üôÇ</p>
            <p>
                <a style={{display: "flex", alignItems: "center"}} target="_blank"
                   href="/images/upload/contacts/conference_dentsu_online.ics">
                    <img src={Calendar} style={{width: "22px", marginRight: "10px"}}/> –ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è dentsu Online
                </a>
            </p>
        </div>
    );
}

const OfflineMsg = () => {
    return (
        <div>
            <p>–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –æ—Ñ–ª–∞–π–Ω</p>
            <p>–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–Ω—Ç–µ—Ä–µ—Å –∫ –Ω–∞—à–µ–π –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏! –í–∞—à—É –∑–∞—è–≤–∫—É –Ω–∞ –æ—Ñ–ª–∞–π–Ω-—É—á–∞—Å—Ç–∏–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ–¥–µ–ª–∏.
                –ú–æ–¥–µ—Ä–∞—Ü–∏—è –Ω—É–∂–Ω–∞, —á—Ç–æ–±—ã –º—ã –ø–æ–º–µ—Å—Ç–∏–ª–∏—Å—å –Ω–∞ –ø–ª–æ—â–∞–¥–∫–µ –∏ –≥–æ—Å—Ç—è–º –±—ã–ª–æ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ. –°–∫–æ—Ä–æ –ø—Ä–∏—à–ª√´–º –ø–∏—Å—å–º–æ —Å
                —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –Ω–∞ –ø–æ—á—Ç—É. –ï—Å–ª–∏ –µ–≥–æ –Ω–µ –±—É–¥–µ—Ç, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ <a
                    href="mailto:support@brandnewconference.ru">support@brandnewconference.ru</a></p>
            <p>–ü–æ–∫–∞ –µ—Å—Ç—å –≤—Ä–µ–º—è –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã —Å–ø–∏–∫–µ—Ä–∞–º –∏ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –Ω–∞ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—é –∫–æ–ª–ª–µ–≥üôÇ</p>
        </div>
    );
}
const OfflineMsgByLink = () => {
    return (
        <div>
            <p>–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –æ—Ñ–ª–∞–π–Ω</p>
            <p>–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–Ω—Ç–µ—Ä–µ—Å –∫ –Ω–∞—à–µ–π –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏! –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –Ω–∞ –æ—Ñ–ª–∞–π–Ω-—É—á–∞—Å—Ç–∏–µ. –ù–∞ –ø–æ—á—Ç—É –ø—Ä–∏–¥—ë—Ç
                –ø–∏—Å—å–º–æ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º. –ï—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ <a
                    href="mailto:support@brandnewconference.ru">support@brandnewconference.ru</a></p>
            <p>–ü–æ–∫–∞ –µ—Å—Ç—å –≤—Ä–µ–º—è –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã —Å–ø–∏–∫–µ—Ä–∞–º –∏ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –Ω–∞ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—é –∫–æ–ª–ª–µ–≥üôÇ</p>
            <p>
                <a style={{display: "flex", alignItems: "center"}} target="_blank"
                   href="/images/upload/contacts/conference_dentsu.ics">
                    <img src={Calendar} style={{width: "22px", marginRight: "10px"}}/> –ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è dentsu
                </a>
            </p>
        </div>
    );
}


const Registration = (props) => {

    if (!props.loading) {
        return <p>Data loading</p>
    }

    let values = {
        name: '',
        last_name: '',
        patronymic: '',
        post_name: '',
        company_name: '',
        email: '',
        phone: '',
        user_id: (props.hash) ? props.hash : '',
        part_type: (props.partFormat) ? props.partFormat : '',
        accept: '',
    };


    useEffect(() => {
        // setValues(values);

    }, [props]);

    const dispatch = useDispatch();

    //const [values, setValues] = useState({});
    const [partFormat, setPartFormat] = useState(props.partFormat);


    const submitData = (values, formContext) => {

        Api.post(`/api/landing/method/registration/`, {
            body: values,
        })
            .then((resp) => {
                if (typeof resp.error != "undefined" && resp.error.length > 0) {
                    dispatch(openModal(<RegistrationNotices>{resp.error}</RegistrationNotices>, '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è'));
                } else if (typeof resp.data.consumer != "undefined") {
                    showSuccessMsg(resp.data.consumer);

                    Object.keys(values).map((fieldName) => {
                        formContext.setFieldValue(fieldName, '');
                    });
                } else {
                    dispatch(openModal(<RegistrationNotices msg="–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"/>, '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è'));
                }
            });
    }

    const showSuccessMsg = (consumer) => {


        if (consumer.part_type == 'offline' && props.hash && props.partFormat == "offline") {
            dispatch(openModal(<RegistrationNotices><OfflineMsgByLink/></RegistrationNotices>, '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è'));
        } else if (consumer.part_type == 'online') {
            dispatch(openModal(<RegistrationNotices><OnlineMsg/></RegistrationNotices>, '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è'));
        } else {
            dispatch(openModal(<RegistrationNotices><OfflineMsg/></RegistrationNotices>, '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è'));
        }

    }

    let shareText = encodeURIComponent('Brand new conference ‚Äî –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è –ø—Ä–æ –±–∏–∑–Ω–µ—Å –∏ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥ –Ω–æ–≤–æ–π –≤–æ–ª–Ω—ã.' +
        ' –ü–æ–∫–∞–∂–µ–º –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é dentsu –∏ –¥–∞–¥–∏–º –ø–æ–ª—å–∑—É –¥–ª—è —Å–±–æ—Ä–∫–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ 2023');
    let shareUrl = encodeURIComponent('https://brandnewconference.ru');

    let docOnline = `–°–æ–≥–ª–∞—Å–∏–µ –Ω–∞ <b><a href='/images/doc_accept_opd.pdf'>–æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö</a></b>`;
    let docOffline = `–°–æ–≥–ª–∞—Å–∏–µ –Ω–∞ <b><a target="_blank" href='/images/doc_accept_opd.pdf'>–æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö</a></b> –∏ <b><a target="_blank" href='/images/doc_accept_opd_with_media.pdf'>–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π</a></b>`;

    const [accept, setAccept] = useState((props.partFormat && props.partFormat == 'offline') ? docOffline : docOnline);

    const changeAccept = (e, formContext) => {
        if (formContext.values.part_type == 'offline') {
            setAccept(docOffline);
        } else {
            setAccept(docOnline);
        }
    }


    return (
        <Form
            values={values}
            submitForm={submitData}
        >
            <div id="registration" className="main-page__registration">


                <h2 className="main-page__registration__title">
                    –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø
                </h2>

                <div className="main-page__registration__grid-container">


                    <div className="main-page__registration__descr">
                        <p>
                            –û–Ω–ª–∞–π–Ω-—Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –≤—Å–µ—Ö –∂–µ–ª–∞—é—â–∏—Ö. –í –æ—Ñ–ª–∞–π–Ω–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ. –í—Å–µ
                            –∑–∞—è–≤–∫–∏
                            –ø—Ä–æ—Ö–æ–¥—è—Ç
                            –º–æ–¥–µ—Ä–∞—Ü–∏—é –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ–¥–µ–ª–∏, –æ—Ç–≤–µ—Ç –ø—Ä–∏–¥–µ—Ç –≤–∞–º –Ω–∞ –ø–æ—á—Ç—É.
                        </p>
                        <p>
                            –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –Ω–∞ –æ—Ñ–ª–∞–π–Ω –∑–∞–∫—Ä—ã–≤–∞–µ–º 12 —Å–µ–Ω—Ç—è–±—Ä—è –≤
                            10:00.
                        </p>
                    </div>


                    <div className="main-page__registration__form__main-set">
                        <Field>
                            <Input
                                label="–ò–º—è *"
                                name="name"
                            />
                        </Field>
                        <Field>
                            <Input
                                label="–§–∞–º–∏–ª–∏—è *"
                                name="last_name"
                            />
                        </Field>
                        <Field>
                            <Input
                                label="–ö–æ–º–ø–∞–Ω–∏—è *"
                                name="company_name"
                            />
                        </Field>
                        <Field>
                            <Input
                                label="–î–æ–ª–∂–Ω–æ—Å—Ç—å *"
                                name="post_name"
                            />
                        </Field>

                        <Field>
                            <Input
                                label="–¢–µ–ª–µ—Ñ–æ–Ω"
                                name="phone"

                            />
                        </Field>

                    </div>


                </div>


                <div className="field-button">
                    <Field>
                        <Input
                            classExtra="pink"
                            label="Email *"
                            name="email"
                        />
                    </Field>
                    <SubmitButton>
                        <Button
                            text=""
                            className="registration-submit"
                            type="button"
                        >
                            <img className="registration-submit__arrow" src={ButtonArrowIcon}></img>
                        </Button>
                    </SubmitButton>
                </div>


                <div style={{paddingTop: '0px'}}>
                    {/*{props.partFormat && props.partFormat } -*/}
                    {/*{props.hash && props.hash }*/}
                    <Field>
                        <Radio onChange={changeAccept} label="–§–æ—Ä–º–∞—Ç —É—á–∞—Å—Ç–∏—è" name="part_type">
                            <RadioInput value="online" label="Online"/>
                            <RadioInput value="offline" label="Offline"/>
                        </Radio>
                    </Field>
                    <div style={{margin: '5px 0 5px 18px'}}>
                        <Field>
                            <Checkbox value="1" name="accept" label={accept}/>
                        </Field>
                    </div>
                </div>


                <a className="reg-share-link" target="_blank"
                   href={`https://t.me/share/url?url=${shareUrl}&text=${shareText}`}>
                    <img style={{width: '24px', marginRight: '10px'}} src={Telegram}/>
                    –ü–æ–¥–µ–ª–∏—Ç—å—Å—è
                </a>


            </div>
        </Form>
    );
}

export default Registration;