import React from "react";
import InputFileDefault from "./input-file-default";

const FileInput = (props) => {

  let button = (props.children) ? props.children : <InputFileDefault onSelect={props.onSelect} {...props}/>;

  return(
    <div>
      {button}
    </div>
  );
}

export default FileInput;


//
//
// import React from 'react'
// import { connect } from 'react-redux'
// import ProgressBar from './progress-bar'
// import ButtonUploadPreviewPanel from './button-upload-preview-panel'
// import Api from '@services/api-service'
// import './button-upload.less'
//
// class ButtonUpload extends React.Component {
//
//   constructor(props) {
//     super(props)
//
//     this.state = {
//       files: []
//     }
//
//     this.fileInput = React.createRef();
//   }
//
//   upload = (File) => {
//     console.log(File);
//     const formData = new FormData();
//
//     if (typeof this.props.data !== "undefined") {
//       for (let field in this.props.data) {
//         formData.append(field, this.props.data[field])
//       }
//     }
//
//     formData.append('file', File)
//
//     Api.post(this.props.uri, {
//       body: formData,
//     }).then(response => {
//       if (typeof this.props.afterUpload === "function") {
//         this.props.afterUpload(response);
//       }
//     })
//   }
//
//   uploadAfterPreview = (formData, params) => {
//     Api.post(this.props.uri, {
//       body: formData,
//     }).then(response => {
//       if (typeof this.props.afterUpload === "function") {
//         this.props.afterUpload(response, params);
//       }
//     })
//   }
//
//   render() {
//
//     return(
//       <div>
//         <label className='uploader__label-default' style={this.props.style || {}}>
//           <div className="input_file">
//             <input
//               ref={this.fileInput}
//               multiple="multiple"
//               className="dropArea__input"
//               type="file"
//               onChange={(e) => {
//
//                 if (typeof this.props.previewPanel == "function") {
//                   this.props.pushModalItem(e.target.files, this.props.previewPanel(), this.uploadAfterPreview);
//                 } else {
//                   {Object.keys(e.target.files).map((key, index) => {
//                     this.upload(e.target.files[key])
//                   })}
//
//                   this.setState({
//                     files: e.target.files
//                   })
//
//                   if (typeof this.props.onChange == "function") {
//                     this.props.onChange(e)
//                   }
//                 }
//               }}
//             />
//             {this.props.children}
//           </div>
//         </label>
//
//         {this.props.progressBar &&
//           <ProgressBar files={this.state.files}></ProgressBar>
//         }
//
//       </div>
//
//     )
//   }
// }
//
// const mapDispatchToProps = (dispatch) => {
//   return {
//     pushModalItem: (files, fields, uploadAfterPreview) => dispatch({
//       type: 'PUSH_MODAL_ITEM',
//       payload: {
//         title: 'Загрузка файлов',
//         content: React.createElement(ButtonUploadPreviewPanel, {files, fields, uploadAfterPreview})
//       }
//     }),
//   }
// }
// export default connect(null, mapDispatchToProps)(ButtonUpload)