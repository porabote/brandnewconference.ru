import React, {useState} from "react";
import Api from "@services";
import "./style.less";
import {Form} from "porabote/form";

const MainContainer = (props) => {

  const [data, setData] = useState(props.data || {});
  const [files, setFiles] = useState([]);
  const uri = props.uri ? props.uri : '/api/files/upload/'

  const onSelect = (e) => {

    let input = e.target;
console.log(input.files);
    // Object.keys(input.files).map((key, index) => {
    //   uploadFile(input.files[key])
    // });

    setFiles([...input.files])

    // if (typeof this.props.onChange == "function") {
    //   props.onChange(e)
    // }
  }

  const upload = (customData) => {

    files.map((file, index) => {

      let fileData = {};

      let fileDatum = customData.filesCustomData[index];
      if (typeof fileDatum != "undefined") {
        Object.entries(fileDatum).map((field, ind) => {
          fileData[field[0]] = field[1];
        });
      }

      fileData = Object.assign(data, fileData);

      uploadFile(file, fileData);

    });

    setFiles([]);
  }

  const uploadFile = (File, data) => {

    const formData = new FormData();

    if (data !== "undefined") {
      Object.entries(data).map((item, index) => {
        formData.append(item[0], item[1])
      });
    }

    formData.append('file', File)

    Api.post(uri, {
      body: formData,
    }).then(response => {
      if (typeof props.uploadCallback === "function") props.uploadCallback();
    })
  }

  let childsScope = childsScope = (Array.isArray(props.children)) ? props.children : [props.children];

  let childs = childsScope.map((child, index) => {
    return React.cloneElement(child, {
      key: index,
      data,
      onSelect,
      files,
    });
  });


  return (
    <Form submitForm={upload} enctype="multipart/form-data">
      {childs}
    </Form>
  );
}

export default MainContainer;